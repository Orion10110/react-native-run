#!/bin/zsh

# commands
typecheck="npx tsc --noemit --skipLibCheck"
lintcheck="npm run lint"
rnPods='npm i && cd ios && pod install && cd ..'
iosFullRun='npm i && cd ios && pod install && cd .. && npm run ios'
rnFullClear="watchman watch-del-all && rm -rf node_modules/ && npm cache verify && npm install"
watchmanClear="watchman watch-del-all"

# help
helpInfo="
RN script info

Notify
notify title body soung
notofyRN title body

Clear Cashe
rn start c - equel to 'npm start -- --reset-cache'
rn clean - clean watchman then run metro with cache cleaning
rn clean f - clean full cache, cleam watchman then remove node_modules then npm cache verify and npm install

Ios
rn ios - run ios
rn ios pods - install npm packages then install pods
rn ios fullRun - install npm packages then install pods than run ios

Android
rn android gc - clean gradlew
rn android adb - equel to 'adb reverse tcp:8081 tcp:8081'
rn android - run android

Tests
rn test -- equel to npm test -- -u
rn test o -- equel to npm test -- -u -o
rn test c -- equel to npm test -- -u Component

Quality
rn quality - check lint and typescript
rn lint - check lint
rn type - check typescript

Start
rn start - start metro
rn start c - start metro with clear cache


Help
rn help - help
"

displayNotification() {
  osascript -e "display notification \"$2\" with title \"$1\" sound name \"$3\""
}

notify() {
  displayNotification $2 $1 Submarine
}

rnClearCashe() {
    var=$PWD
    osascript -e "tell app \"Terminal\"
        do script \"cd $var && npm start -- --reset-cache\"
    end tell"
}

rnStartMetro() {
    var=$PWD
    osascript -e "tell app \"Terminal\"
        do script \"cd $var && npm start\"
    end tell"
}

rnStart() {
    if [ -n "$1" ] && [ "$1"  = 'start' ]
    then
        if [ -z "$2" ]
        then
            rnStartMetro
            notify Metro "run"
            return 1
        fi

        if [ -n "$2"] && [ "$2" = 'c' ]
        then
            rnClearCashe
            notify "Metro" "cache clean and run"
            return 1
        fi

    fi
}

rnClear() {
    if [ -n "$1" ] && [ "$1"  = 'clean' ]
    then
        if [ -n "$2" ] && [ "$2"  = 'f' ]
        then
            zsh -c $rnFullClear
            rnClearCashe
            notify Metro "Cache clean and npm reinstall"
        else
            zsh -c $watchmanClear
            rnClearCashe
            notify "Watchman and Cache" "cleaned"
        fi
    fi
}

rnIos() {
    if [ -n "$1" ] && [ "$1"  = 'ios' ]
    then
        if [ -n "$2" ] && [ "$2" = "pods" ]
        then
            zsh -c $rnPods
            notify "Npm and Pods" "Was installed"
            return 1
        fi
        if [ -n "$2" ] && [ "$2" = "fullRun" ]
        then
            zsh -c $iosFullRun
            notify Ios "Was installed"
            return 1
        fi
        if [ -z "$2" ]
        then
            zsh -c "npm run ios"
            notify Ios "Was run"
            return 1
        fi
    fi
}

rnAndroid() {
    if [ -n "$1" ] && [ "$1"  = 'android' ]
    then
        if [ -n "$2" ] && [ "$2" = 'gc' ]
        then
            zsh -c "cd android && ./gradlew clean && cd .."
            notify Android "Was cleaned"
        fi
        if [ -n "$2" ] && [ "$2" = 'adb' ]
        then 
            zsh -c "adb reverse tcp:8081 tcp:8081"
            return 1
        fi
        if [ -z "$2" ]
        then
            zsh -c "npm run android"
            notify Android "Was run"
            return 1
        fi
    fi
}

rnTests() {
    if [ -n "$1" ] && [ "$1"  = 'test' ]
    then
        if [ -n "$2" ] && [ "$2"  = 'o' ]
        then
            zsh -c "npm test -- -u -o"
            notify Tests "Was tested"
            return 1
        fi
        if [ -n "$2" ] && [ -n "$3" ] && [ "$2"  = 'c' ]
        then
            zsh -c "npm test -- $3 -u"
            notify Tests "Was tested"
            return 1
        fi
        if [ -z "$2" ]
        then
            zsh -c "npm test -- -u"
            notify Tests "Was tested"
            return 1
        fi
    fi
}

rnHelp() {
    if [ -n "$1" ] && [ "$1"  = 'help' ]
    then
        echo $helpInfo
    fi
}

rnQuality() {
    if [ -n "$1" ] && [ "$1"  = 'lint' ]
    then
        zsh -c $lintcheck
        notify Tests "Was checked"
        return 1
    fi
    if [ -n "$1" ] && [ "$1"  = 'type' ]
    then
        zsh -c $typecheck
        notify Tests "Was checked"
        return 1
    fi
    if [ -n "$1" ] && [ "$1"  = 'quality' ]
    then
        zsh -c $typecheck
        zsh -c $lintcheck
        notify Tests "Was checked"
        return 1
    fi
}

rn() {
    rnQuality $1 $2
    rnClear $1 $2
    rnIos $1 $2
    rnAndroid $1 $2
    rnTests $1 $2 $3
    rnHelp $1
    rnStart $1 $2
    if [ -z "$1" ]
    then 
        rnHelp help
    fi
}

rn $1 $2 $3 $4